package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import com.itextpdf.text.Document;
import java.sql.*;
import java.sql.SQLException;
import java.sql.DriverManager;
import dataAccessObjects.DBConnection;
import Models.Records;

public final class report30days_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("       \n");
      out.write("        \n");
      out.write("        ");

              int femDonors =0;
    int maleDonors =0;
    int totalDonors = 0;
    int femAdultDonors = 0;
    int maleAdultDonors = 0;
    Records record = new Records();
    DBConnection db = new DBConnection();
    db.thirtyDaysRecord(record);
     Connection connection = null;
            PreparedStatement pstatement;
            ResultSet resultSet;
            if (connection == null || connection.isClosed()) {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    connection = DriverManager.getConnection("jdbc:mysql://localhost/BloodBank", "root", "gachau");
                } catch (ClassNotFoundException e) {
                    throw new SQLException(e);
                }
            }

            String str = "pdf";
            Document document = new Document();
            
            //  Document document = new Document();
                if (str.equals("pdf")) {
                    response.setContentType("application/pdf");
                    PdfWriter.getInstance(document, response.getOutputStream());
                }

                 document.open();

                /* new paragraph instance initialized and add function write in pdf file*/
                document.add(new Paragraph("----------------CBBank SYSTEM REPORT FOR THE MONTH OF: June"
                        + "-----------------------------------\n\n"));
                document.add(new Paragraph("                              REPORT GENERATED BY: County Blood Bank  \n\n"));
                document.add(new Paragraph("-----------------------------------------------------------------"
                        + "----------------------------------------------------------------"));
                document.add(new Paragraph("                 NEWLY ADULT REGISTERED DONORS   "));
                
                
                document.add(new Paragraph("Total Number Of Adult Male Donors::     "+ record.getMaleDonors()));
                document.add(new Paragraph("Total Number Of  Adult Female Donors::  "+ record.getFemDonors()));
                document.add(new Paragraph("  Total Number Of Adult Donors ::         "+ record.getTotalDonors()));
                
                 document.add(new Paragraph("             NEWLY REGISTERED STUDENT DONORS   "));
                 int femStudent =0, maleStudent=0;
                 
                 String sql = "select count(gender) as total from STUDENTDONORS where month(now()) and gender='male'";
                 pstatement = connection.prepareStatement(sql);
                 resultSet = pstatement.executeQuery();
                 while(resultSet.next()){
                          maleStudent = resultSet.getInt(1);
                     document.add(new Paragraph ("Total Number of Male Student Donors::  "+ resultSet.getInt(1)));
                 }
                 String sql1 = "select count(gender) as total from STUDENTDONORS where month(now()) and gender='female'";
                 pstatement = connection.prepareStatement(sql1);
                 resultSet = pstatement.executeQuery();
                 while(resultSet.next()){
                     femStudent = resultSet.getInt(1);
                     document.add(new Paragraph ("Total Number of Female Student Donors::  "+ resultSet.getInt(1)));
                 }
                 
                 String sql2 = "select count(bloodgroup) as total from bloodbags where bloodgroup ='A' and bloodtype='+ve' and month(now()) and bloodstatus='yes' ";
                  pstatement = connection.prepareStatement(sql2);
                 resultSet = pstatement.executeQuery();
                 int Apositive = 0;
                 while(resultSet.next()){
                     Apositive = resultSet.getInt(1);
                 }
                    String sql3 = "select count(bloodgroup) as total from bloodbags where bloodgroup ='A' and bloodtype='+' and month(now()) and bloodstatus='no' ";
                  pstatement = connection.prepareStatement(sql3);
                 resultSet = pstatement.executeQuery();
                 int ApositiveRejected = 0;
                 while(resultSet.next()){
                     ApositiveRejected = resultSet.getInt(1);
                 }
                 
                 
                 int totalStudent = femStudent + maleStudent;
                 PdfPTable donorTable  = new PdfPTable(3);
                 
                 donorTable.addCell("ADULTS");
                  donorTable.addCell("STUDENTS");
                   donorTable.addCell("");
                   donorTable.addCell("MALE");
                    donorTable.addCell(""+record.getMaleDonors());
                   donorTable.addCell("FEMALE");
                    donorTable.addCell("TOTAL");
                 
                    document.add(donorTable);
                 
               
                document.add(new Paragraph ("Total Number of New Student Donors::  "+ totalStudent) );
                                 document.add(new Paragraph("              BAGS DONATED   "));
                                 PdfPTable table = new PdfPTable(4);
                                  table.setWidthPercentage(100);
                                 
                                 
                                   table.addCell("Blood Group");
                                 table.addCell("Transfusable");
                                 table.addCell("Rejected"); 
                                 table.addCell("Total");
                               
                                 table.addCell("A+");
                                 
                                  table.addCell(""+Apositive);
                                 table.addCell(""+ApositiveRejected);
                                  int totalA = Apositive + ApositiveRejected;
                                 table.addCell(""+totalA);
                                 String sql4 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='A' and bloodtype='-ve' and month(now()) and bloodstatus='yes' "; 
                                  pstatement = connection.prepareStatement(sql4);
                 resultSet = pstatement.executeQuery();
                 int Anegative = 0;
                 while(resultSet.next()){
                     Anegative = resultSet.getInt(1);
                 }
                 String sql5 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='A' and bloodtype='-ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql5);
                 resultSet = pstatement.executeQuery();
                 int AnegativeRejected = 0;
                 while(resultSet.next()){
                     AnegativeRejected = resultSet.getInt(1);
                 }
                                 table.addCell("A-");
                                 table.addCell(""+Anegative);
                                 table.addCell(""+AnegativeRejected);
                                 int totalAneg = Anegative + AnegativeRejected;
                                 table.addCell(""+totalAneg);
                                 table.addCell("B+");
                                 String sql6 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='B' and bloodtype='+ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql6);
                 resultSet = pstatement.executeQuery();
                 int Bpositive = 0;
                 while(resultSet.next()){
                     Bpositive = resultSet.getInt(1);
                 }
                                String sql7 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='B' and bloodtype='+ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql7);
                 resultSet = pstatement.executeQuery();
                 int BpositiveRejected = 0;
                 while(resultSet.next()){
                     BpositiveRejected = resultSet.getInt(1);
                 }  
                 table.addCell(""+Bpositive);
                 table.addCell(""+BpositiveRejected);
                 int totalBpos = Bpositive + BpositiveRejected;
                 table.addCell(""+totalBpos);
                 table.addCell("B-");
                 
                                    String sql8 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='B' and bloodtype='-ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql8);
                 resultSet = pstatement.executeQuery();
                 int Bnegative = 0;
                 while(resultSet.next()){
                     Bnegative = resultSet.getInt(1);
                 }
                                String sql9 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='B' and bloodtype='-ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql9);
                 resultSet = pstatement.executeQuery();
                 int BnegativeRejected = 0;
                 while(resultSet.next()){
                     BnegativeRejected = resultSet.getInt(1);
                 }  
                 int totalBneg =  Bnegative + BnegativeRejected;
                 table.addCell(""+Bnegative);
                 table.addCell(""+ BnegativeRejected);
                 table.addCell("" +totalBneg);

                                     String sql10 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='AB' and bloodtype='+ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql10);
                 resultSet = pstatement.executeQuery();
                 int ABpositive = 0;
                 while(resultSet.next()){
                     ABpositive = resultSet.getInt(1);
                 }
                                String sql11 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='AB' and bloodtype='+ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql11);
                 resultSet = pstatement.executeQuery();
                 int ABpositiveRejected = 0;
                 while(resultSet.next()){
                     ABpositiveRejected = resultSet.getInt(1);
                 }             
                 int totalABpos = ABpositive + ABpositiveRejected;
                 table.addCell("AB+");
                 table.addCell(""+ABpositive);
                 table.addCell(""+ABpositiveRejected);
                 table.addCell(""+totalABpos);
                 
                 
                                     String sql12 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='AB' and bloodtype='-ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql12);
                 resultSet = pstatement.executeQuery();
                 int ABnegative = 0;
                 while(resultSet.next()){
                     ABnegative = resultSet.getInt(1);
                 }
                                String sql13 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='AB' and bloodtype='-ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql13);
                 resultSet = pstatement.executeQuery();
                 int ABnegativeRejected = 0;
                 while(resultSet.next()){
                     ABnegativeRejected = resultSet.getInt(1);
                 } 
                 int totalABneg = ABnegative + ABnegativeRejected;
                 table.addCell("AB-");
                 table.addCell(""+ABnegative);
                 table.addCell(""+ABnegativeRejected);
                 table.addCell(""+totalABneg);
                 
                        String sql14 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='O' and bloodtype='+ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql14);
                 resultSet = pstatement.executeQuery();
                 int Opositive = 0;
                 while(resultSet.next()){
                     Opositive= resultSet.getInt(1);
                 }
                                String sql15 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='O' and bloodtype='+ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql15);
                 resultSet = pstatement.executeQuery();
                 int OpositiveRejected= 0;
                 while(resultSet.next()){
                    OpositiveRejected = resultSet.getInt(1);
                 } 
                 int totalOpos = Opositive + OpositiveRejected;
                 table.addCell("O+");
                 table.addCell(""+Opositive);
                 table.addCell(""+OpositiveRejected);
                 table.addCell(""+totalOpos);
                 
                  
                        String sql16 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='O' and bloodtype='-ve' and month(now()) and bloodstatus='yes' "; 
                                 pstatement = connection.prepareStatement(sql16);
                 resultSet = pstatement.executeQuery();
                 int Onegative = 0;
                 while(resultSet.next()){
                     Onegative= resultSet.getInt(1);
                 }
                                String sql17 ="select count(bloodgroup) as total from bloodbags where bloodgroup ='O' and bloodtype='-ve' and month(now()) and bloodstatus='no' "; 
                                 pstatement = connection.prepareStatement(sql17);
                 resultSet = pstatement.executeQuery();
                 int OnegativeRejected= 0;
                 while(resultSet.next()){
                    OnegativeRejected = resultSet.getInt(1);
                 } 
                 int totalOneg = Onegative + OnegativeRejected ;
                 table.addCell("O-");
                 table.addCell(""+Onegative);
                 table.addCell(""+OnegativeRejected);
                 table.addCell(""+totalOneg);
                 int totalBags = totalA + totalAneg + totalBpos+totalBneg + totalABpos + totalABneg + totalOpos + totalOneg;
                 table.addCell("TOTAL");
                 table.addCell("");
                 table.addCell("");
                 table.addCell(""+totalBags);
                 
                                 document.add(table);
                                 
               
                
                
                document.addCreationDate();
                document.close();
            
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write(" ");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
